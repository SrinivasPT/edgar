[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "edgar-query-tool"
version = "1.0.0"
description = "An intelligent SEC EDGAR filings query tool with AI-powered natural language processing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Edgar Query Tool Team"},
]
keywords = ["edgar", "sec", "filings", "ai", "nlp", "sql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "tabulate>=0.9.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.23.0",
    "pytest>=8.3.5",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "ruff>=0.1.0",
    "mypy>=0.800",
    "pre-commit>=3.0.0",
]

[project.scripts]
edgar-api = "edgar_query.api.server:main"
edgar-web = "edgar_query.web.server:main"

[project.urls]
Homepage = "https://github.com/example/edgar-query-tool"
Repository = "https://github.com/example/edgar-query-tool.git"
"Bug Tracker" = "https://github.com/example/edgar-query-tool/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/edgar_query"]

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]

# UV-specific configuration
[tool.uv]
dev-dependencies = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "ruff>=0.1.0",
    "mypy>=0.800",
    "pre-commit>=3.0.0",
]

[tool.uv.sources]
